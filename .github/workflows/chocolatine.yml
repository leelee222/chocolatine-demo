name: Chocolatine Workflow

on:
  push:
    branches-ignore:
      - 'ga-ignore-**'
  pull_request:
    branches-ignore:
      - 'ga-ignore-**'

env:
  MIRROR_URL: ${{ secrets.MIRROR_URL }}
  EXECUTABLES: "my_program,unit_tests"

jobs:
  check_coding_style:
    name: Check Coding Style
    runs-on: ubuntu-latest
    if: ${{ github.repository != secrets.MIRROR_REPOSITORY }}
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Run coding style checker
        run: |
          check.sh $(pwd) $(pwd)
          if [ -s coding-style-reports.log ]; then
            cat coding-style-reports.log
            exit 1
          fi
      
      - name: Display coding style errors
        if: failure()
        run: |
          while read -r line; do
            file=$(echo "$line" | cut -d: -f1)
            line_nb=$(echo "$line" | cut -d: -f2)
            message=$(echo "$line" | cut -d: -f3-)
            echo "::error file=$file,line=$line_nb::$message"
          done < coding-style-reports.log
  
  check_program_compilation:
    name: Check Program Compilation
    runs-on: ubuntu-latest
    needs: [check_coding_style]
    if: ${{ github.repository != secrets.MIRROR_REPOSITORY }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install criterion
        run: |
          sudo apt-get update
          sudo apt-get install -y libcriterion-dev
      
      - name: Compile program
        timeout-minutes: 2
        run: make
      
      - name: Clean compiled files
        run: make clean
      
      - name: Check executables
        run: |
          make
          make tests_run GCOV=1 || true  # Build the tests executable
          
          IFS=',' read -ra EXEC_ARRAY <<< "$EXECUTABLES"
          for exec_path in "${EXEC_ARRAY[@]}"; do
            if [ ! -f "$exec_path" ]; then
              echo "::error::Executable $exec_path not found"
              exit 1
            fi
            if [ ! -x "$exec_path" ]; then
              echo "::error::File $exec_path is not executable"
              exit 1
            fi
          done
  
  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: [check_program_compilation]
    if: ${{ github.repository != secrets.MIRROR_REPOSITORY }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install criterion
        run: |
          sudo apt-get update
          sudo apt-get install -y libcriterion-dev
      
      - name: Run tests
        timeout-minutes: 2
        run: make tests_run
  